@using HtmlHelpers
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.Owin
@model Web.ViewModels.GameCreateViewModel

@{
    ViewBag.Title = Resources.Common.NewGame;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section AdminStyles {
    @*<link href="~/Scripts/AdminTheme/plugins/select2/select2.css" rel="stylesheet" />*@
    <style>
         .square {
            width: 40px !important;
            height: 40px !important;
        }

    </style>
}

<div class="row">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">@Resources.Common.GameDetails</h3>
                </div>
                <div class="box-body">
                    @Html.Partial("_CreateGamePartial", Model)
                </div><!-- /.box-body -->
            </div><!-- /.box -->
        </div><!-- /.col (left) -->
    }

    @*<div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@
</div>
<div class="row">
    @if (Model.GameTime)
    {
        //"Create", "Games", FormMethod.Post, new { Class = "form inline" })
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="col-xs-12">
                @Html.Partial("_CreateUserGameRowsPartial", Model)
            </div>
        }
    }
</div>



    @section AdminScripts {
    <script>

        @if (@Model.GameRowTypesForGivenGame != null) {
            <text>
                var gameData = {
                    'gameid': @Model.Game.GameId,
                    'currentgamerow': 0,
                    'gamerows': [
                            @foreach (var gameRowType in @Model.GameRowTypesForGivenGame)
                            {
                                <text>
                                {'id':  "@gameRowType.GameRowTypeId", 'desc': "@gameRowType.Description"},
                                </text>
                           }
                    ],
                    'users': [
                        { 'id': "@User.Identity.GetUserId()", 'name': "@User.Identity.GetUserName()", }
                    ],
                    'getNextGameRow': function() {
                        this.currentgamerow++;
                        if(typeof this.gamerows[this.currentgamerow] === 'undefined') {
                            return false;
                        }
                        else {
                            return this.gamerows[this.currentgamerow]
                        }
                        
                    }
                };
                </text>
        }


        $('#add-person').on('click', function () {
            console.log('#add-person was clicked');
            var newusername = $('#name_box').val()
            if (newusername) {

                //ToDo: into single call
                //ToDo: JS viskaks mingi errori kui sisestatav nimi on juba olemas table headis nt

                $.ajax({
                    url: '@Url.Action("AddUser")',
                    type: "POST",
                    data: { username: newusername },
                    success: function (data) {
                        console.log(newusername + " id: " + data.id);
                        gameData.users.push({ 'id': data.id, 'name': newusername });

                        jQuery.get('/Games/AddUserGameRow?userid='+data.id).done(function (html) {
                            $('#mtable thead tr>th:last').before("<th>" + newusername + "</th>");
                            $('#mtable tbody tr>td:last').before("<td>" + html + "</td>");

                        });
                    }
                });

               

                console.log(gameData);
                $('#name_box').val("");
            }
        });

        $('.save-row').on('click', function () {
           var tr_element=$(this).closest('tr');
           console.log(tr_element)
           var obj = {
               'gamerowtypeid':tr_element.data('gamerowtypeid'),
               'gamerowid':tr_element.data('gamerowid'), 
               'userrows': [],
           }

           $('#mtable tbody tr td div').each(function() {
               var el  = $(this);
               userid = el.data('userid')
               if(userid>0) {
                   var start_bet = el.find('.start_bet').first().val();
                   var end_bet = el.find('.end_bet').first().val();
                   obj.userrows.push({'userid':userid, 'start_bet':start_bet, 'end_bet': end_bet})
               }
           });
            console.log(obj)
            $.ajax({
                url: '@Url.Action("AddGameRow")',
                type: "POST",
                data: obj,
                success: function (data) {
                    console.log(data);
                   //TODO datalt saame id
                }
            });
            var last_row = $('#mtable tbody>tr:last');
            if (last_row.data('gamerowid') == 0) { 
                var gamerow = gameData.getNextGameRow();
                if (gamerow) {
                    row = $('#mtable tbody>tr:last').clone(true)
                    row.find('.start_bet').val('0')
                    row.find('.end_bet').val('');
                

                    row.data('gamerowtypeid', gamerow.id);
                    row.find('td:first').html( gamerow.desc);
                    row.data('gamerowid', '0')
                    row.insertAfter('#mtable tbody>tr:last')
                    console.log('LISAME UUE REA: ')
                    console.log(row)
                    console.log(row.data('gamerowtypeid'))
                    console.log(row.data('gamerowid'))
               }
            }
          
        });


        $('#name_box').keypress(function (event) {
            if (event.keyCode == 13) {
                $('#add-person').click();
                event.preventDefault();
            }
        });

    </script>
    @if (Model.GameTime)
    {
        <script>
            $("#dropdown").prop("disabled", true);
            $("#new-game-btn").hide();
            $('#Game_GameName').attr('readonly', true);
            $('#Game_GameName').addClass('input-disabled');
            $('#NumberOfPlayers').attr('readonly', true);
            $('#NumberOfPlayers').addClass('input-disabled');


            var $divStart = $(".start_bet");
            var $div = $(".end_bet");
            
            var observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.attributeName === "class") {
                        var attributeValue = $(mutation.target).prop(mutation.attributeName);
                        console.log("Class attribute changed to:", attributeValue);
                        if (attributeValue.indexOf("error") > 0) {
                            $div.parent("span").addClass("has-error");
                            console.log("adding class endbet");
                        } else {
                            $div.parent("span").removeClass();
                            console.log("removing class endbet");
                        }
                    }
                });
            });    
           
            observer.observe($div[0], {
                attributes: true
            });

            var observer2 = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.attributeName === "class") {
                        var attributeValue = $(mutation.target).prop(mutation.attributeName);
                        console.log("Class attribute changed to:", attributeValue);
                        if (attributeValue.indexOf("error") > 0) {

                            $divStart.parent("span").addClass("has-error");

                            console.log("adding class startbet");
                        } else {

                            $divStart.parent("span").removeClass();
                            console.log("removing class startbet");
                        }
                    }
                });
            });    

            observer2.observe($divStart[0], {
                attributes: true
            });


        </script>
    }

}