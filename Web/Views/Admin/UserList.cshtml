@using System.Web.UI.WebControls
@using HtmlHelpers
@using PagedList.Mvc
@model Web.ViewModels.AdminUserListViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    //Move them to some html helper class?
    // https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110).aspx
    // 2 parameter types and result type
    Func<string, string, string> getSortProperty = (propertyName, currentSortProperty) => currentSortProperty == propertyName ? "_" + propertyName : propertyName;

    Func<string, string, string> getSortIcon = (propertyName, currentSortProperty) => currentSortProperty == propertyName ? "fa-sort-up" : currentSortProperty == "_" + propertyName ? "fa-sort-down" : "fa-sort";
}

<div class="row">
    <div class="col-xs-12">

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">@Resources.Common.UserlistTitle</h3>
                <div class="box-tools">
                    @using (Html.BeginForm("UserList", "Admin", FormMethod.Get, new { id = "dateTimeForm" }))
                    {
                        @Html.HiddenFor(model => model.SortProperty)
                        <div class="input-group input-group-sm" style="width: 150px;">
                            @Html.EditorFor(model => model.Filter, new { htmlAttributes = new { @class = "form-control pull-right", PlaceHolder=@Resources.Common.Search } })
                            <div class="input-group-btn">
                                <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body table-responsive no-padding">
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <th>
                                <a href="@Url.Action("UserList", new {SortProperty = getSortProperty("firstname", Model.SortProperty), Model.Filter})">
                                    @Html.DisplayNameFor(model => model.Users.FirstOrDefault().FirstName)
                                    <i class="fa @getSortIcon("firstname", Model.SortProperty)"></i>
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("UserList", new {SortProperty = getSortProperty("lastname", Model.SortProperty), Model.Filter})">
                                    @Html.DisplayNameFor(model => model.Users.FirstOrDefault().LastName)
                                    <i class="fa @getSortIcon("lastname", Model.SortProperty)"></i>
                                </a>
                            </th>
                            <th>@Html.DisplayNameFor(model => model.Users.FirstOrDefault().Email)</th>
                            <th>@Html.DisplayNameFor(model => model.Users.FirstOrDefault().UserRoles.FirstOrDefault().Name)</th>
                            <th></th>
                        </tr>
                        @foreach (var item in Model.Users)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @foreach (var role in item.UserRoles)
                                    {
                                        @role.Name
                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Index", "Manage", new { id = item.UserIntId }) |
                                    @Html.ActionLink("Edit", "Index", "Manage", new { id = item.UserIntId }) |
                                    @Html.ActionLink("Edit", "Index", "Manage", new { id = item.UserIntId })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="box-footer clearfix pull-left">
                    @Html.PagedListPager(Model.Users, page => Url.Action("UserList", new { PageNumber = page }))
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
</div>
